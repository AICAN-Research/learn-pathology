"""
Django settings for learnpathology project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'Insert secret key here!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# To enable FEIDE login you also have to add a social applications object with the client id and secret key to the database
USE_FEIDE_LOGIN = True

# To enable TILE CACHE you need to install the python package pymemcache and the linux package memcached.
# Remember to configure the size of the memcached in /etc/memcached.conf
USE_TILE_CACHE = True

ALLOWED_HOSTS = ['10.20.93.218', 'learnpathology.no', 'www.learnpathology.no']

# For using flatpages, set to site corresponding to this settings.py file
APPEND_SLASH = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_bootstrap_icons',
    'ckeditor',
    'ckeditor_uploader',
    'learnpathology',
    'user',
    'slide',
    'task',
    'annotation_task',
    'multiple_choice',
    'free_text',
    'click_question',
    'one_to_one',
    'course',
    'tag',


]

if USE_FEIDE_LOGIN:
    INSTALLED_APPS.extend([
        'allauth',
        'allauth.account',
        'allauth.socialaccount',
        #'allauth.socialaccount.providers.dataporten',
        'feide'
    ])


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'learnpathology.middleware.LoginRequiredMiddleware',
]

if USE_FEIDE_LOGIN:
    MIDDLEWARE.append('allauth.account.middleware.AccountMiddleware')

ROOT_URLCONF = 'learnpathology.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'learnpathology.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PRINT_RUNTIME = False  # Disable in deployment

LOGIN_URL = '/user/login/'

AUTH_USER_MODEL = 'user.User'

LOGIN_REDIRECT_URL = 'frontpage'


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR.joinpath('media')

CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_IMAGE_BACKEND = 'pillow'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Default',
        'toolbar_Default': [
            ['Format', 'FontSize', '-', 'TextColor', 'BGColor'],
            ['Bold', 'Italic', 'Underline', 'Strike', 'Superscript', 'Subscript'],
            ['Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink', 'Anchor', '-', 'Find', 'Replace'],
            ['Image', 'Table', 'HorizontalRule', 'SpecialChar'],
            # ['Source']
        ],
        'height': 'auto',
        'width': 'auto',
    },

    'lightweight': {
        'toolbar': 'Lightweight',
        'toolbar_Lightweight': [
            ['Format', 'FontSize'],
            ['Bold', 'Italic', 'Underline'],
            ['Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['Image', 'Table', 'SpecialChar'],
        ],
        'height': 'auto',
        'width': 'auto',
    },

    'featherweight': {
        'toolbar': 'Featherweight',
        'toolbar_Featherweight': [
            ['Bold', 'Italic', 'Underline'],
            ['Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
        ],
        'height': 'auto',
        'width': 'auto',
    },

    'minimal': {
        'toolbar': 'Minimal',
        'toolbar_Minimal': [
            ['Bold', 'Italic', 'Underline'],
            ['Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste'],
        ],
        'height': 'auto',
        'width': 'auto',
    },

}

SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_LOGIN_ON_GET = True
if USE_FEIDE_LOGIN:
    # TODO don't use hard coded urls
    LOGIN_URL = '/user/login/feide/'
    LOGIN_EXEMPT_URLS = ['accounts/dataporten/login/', 'privacy/']


#BS_ICONS_CACHE = BASE_DIR.joinpath('bs_icon_cache')

if USE_TILE_CACHE:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
            'LOCATION': '127.0.0.1:11211',
            'MAX_ENTRIES': 100000,
            'OPTIONS': {
                'no_delay': True,
                'ignore_exc': True,
                'max_pool_size': 4,
                'use_pooling': True,
            }
        }
    }

USE_TURBOJPEG = False
USE_IMAGE_SHARPENING = False
